b[a, on=.(id), x := i.x, verbose = TRUE, by=.EACHI][]
b[a, on=.(id), x := if (.N==1L) i.x else stop(do.call(paste, c("Bad:", .BY))), verbose = TRUE][]
b[a, on=.(id), x := if (.N==1L) i.x else stop(do.call(paste, c(.("Bad:"), .BY))), verbose = TRUE][]
b[a, on=.(id), x := if (.N==1L) i.x else stop(do.call(paste, c("Bad:", .BY))), by=.EACHI, verbose = TRUE][]
b[a, on=.(id), x := if (.N==1L) i.x else stop(do.call(paste, c("Bad:", .BY))), by=.EACHI, verbose = TRUE][]
b[a, on=.(id), .N, by=.EACHI, verbose = TRUE][]
a[b, on=.(id), .N, by=.EACHI][, range(.N)]
a[b, on=.(id), .N, by=.EACHI]
a[b, on=.(id), .N, by=.EACHI][, range(N)]
1
library(data.table)
a <- data.table(id = c(1L, 1L, 2L, 3L, NA_integer_), x = 11:15)
b <- data.table(id = 1:2, y = -(1:2))
b[a, on=.(id), x := i.x, verbose = TRUE][]
# Calculated ad hoc index in 0 secs
# Starting bmerge ...done in 0 secs
# Detected that j uses these columns: x,i.x
# Assigning to 3 row subset of 2 rows
?.Last.value
1
personDT = data.table(id = 1:2, name = LETTERS[1:2])
placeDT = data.table(id = 1:2, name = state.abb[1:2])
personDT
placeDT
perDT = data.table(id = 1:2, name = LETTERS[1:2])
locDT = data.table(id = 1:2, name = state.abb[1:2])
psnDT = data.table(id = 1:2, name = LETTERS[1:2])
locDT = data.table(id = 1:2, name = state.abb[1:2])
psnDT[locDT, on=.()]
psnDT[, .cjid := NA ]
locDT[, .cjid := NA ]
visitDT = psnDT[locDT, on=.(.cjid)]
psnDT[locDT, on=.(.cjid)]
visitDT = psnDT[locDT, on=.(.cjid), !"cjid"]
visitDT
visitDT = psnDT[locDT, on=.(.cjid), !".cjid"]
visitDT
visitDT = psnDT[locDT, on=.(.cjid)][, !".cjid"]
visitDT
psnDT[, .cjid := NA ]
locDT[, .cjid := NA ]
visitDT = psnDT[locDT, on=.(.cjid)][, .cjid := NULL ]
visitDT
psnDT[, .cjid := NULL ] # cleanup
locDT[, .cjid := NULL ]
visitDT
psnDT[, .cjid := NA ]
locDT[, .cjid := NA ]
visitDT = psnDT[locDT, on=.(.cjid)][, .cjid := NULL ][]
psnDT[, .cjid := NULL ] # cleanup
locDT[, .cjid := NULL ]
psnDT[, .cjid := NA ]
locDT[, .cjid := NA ]
visitDT = psnDT[locDT, on=.(.cjid)][, .cjid := NULL ][]
psnDT[, .cjid := NULL ] # cleanup
locDT[, .cjid := NULL ]
visitDT = psnDT[locDT, on=.(.cjid)][, .cjid := NULL ][]
psnDT[, .cjid := NA ]
locDT[, .cjid := NA ]
visitDT = psnDT[locDT, on=.(.cjid)][, .cjid := NULL ][]
visitDT
psnDT[, .cjid := NA ]
locDT[, .cjid := NA ]
visitDT = psnDT[locDT, on=.(.cjid),
.(psn_id = x.id, loc_id = i.id, psn_name = x.id, loc_name = i.id)]
visitDT
x = c(1,1,1,2,2)
with(rle(x), lengths)
diag(4)
diag(3)[1:2,]
diag(diag(3)[1:2,])
replace(numeric(5), 3, 1)
?head.data.frame
head
methods("head", class(1))
methods("head", class(data.table(1)))
library(data.table)
library(data.table)
methods("head", class(data.table(1)))
?rle
f = function(x) x
c(LETTERS, letters)
# example data
x = c(TRUE, FALSE, TRUE)
x
# [1]  TRUE FALSE  TRUE
length(x)
# [1] 3
class(x)
# [1] "logical"
help.start()
T
array()
args(array)
args(matrix)
array
upper.tri
devtools::install_github("rstudio/rmarkdown")
a = data.table(id = c(1L, 1L, 2L, 3L, NA_integer_), x = 11:15)
library(data.table)
a = data.table(id = c(1L, 1L, 2L, 3L, NA_integer_), x = 11:15)
a
b = data.table(id = 1:2, y = -(1:2))
b
a
b
a = data.table(id = c(1L, 1L, 2L, 3L, NA_integer_), t = c(1L, 2L, 1L, 2L, NA_integer_) x = 11:15)
a = data.table(id = c(1L, 1L, 2L, 3L, NA_integer_), t = c(1L, 2L, 1L, 2L, NA_integer_), x = 11:15)
a
DT = data.table(id = rep(1:2, 3), t = c(1L, 5L, 12L, 3L, 4L, 15L))
DT = data.table(id = rep(1:2, 3), t = c(1L, 5L, 12L, 3L, 4L, 15L))
DT[.(id = id, t0 = t - 7, t1 = t), on=.(id, t >= t0, t < t1), .N, by=.EACHI]
warnings()
DT[.(id = id, t0 = t - 7, t1 = t), on=.(id, t >= t0, t < t1), .N, by=.EACHI]
DT = data.table(id = rep(1:2, 3), t = c(1L, 5L, 12L, 3L, 4L, 15L))
DT[.(id = id, t0 = t - 7, t1 = t), on=.(id, t >= t0, t < t1), .N, by=.EACHI]
DT = data.table(id = rep(1:2, each = 3), t = c(1L, 5L, 12L, 3L, 4L, 15L))
DT[.(id = id, t0 = t - 7, t1 = t), on=.(id, t >= t0, t < t1), .N, by=.EACHI]
warnings()
warnings()
warnings()
warnings()
DT = data.table(id = rep(1:2, each = 3), t = c(1L, 5L, 12L, 3L, 4L, 15L))
DT[.(id = id, t0 = t - 7, t1 = t), on=.(id, t >= t0, t < t1), .N, by=.EACHI]
DT = data.table(id = rep(1:2, each = 3), t = c(1L, 5L, 12L, 3L, 4L, 15L), v = 1:6)
DT[.(id = id, t0 = t - 7L, t1 = t), on=.(id, t >= t0), sum(v), by=.EACHI]
DT[.(id = id, t0 = t - 7L, t1 = t), on=.(id, t >= t0), v7 := sum(v), by=.EACHI]
DT
DT
DT
DT
DT
DT = data.table(id = rep(1:2, each = 3), t = c(1L, 5L, 12L, 3L, 4L, 15L), v = 1:6)
DT[.(id = id, t0 = t - 7L, t1 = t), on=.(id, t >= t0), v7 := sum(v), by=.EACHI][]
DT = data.table(id = rep(1:2, each = 3), t = c(1L, 5L, 12L, 3L, 4L, 15L), v = 1:6)
DT[.(id = id, t0 = t - 7L, t1 = t), on=.(id, t >= t0), v7 := sum(v), by=.EACHI][]
DT = data.table(id = rep(1:2, each = 3), t = c(1L, 5L, 12L, 3L, 4L, 15L), v = 1:6)
DT[.(id = id, t0 = t - 7L, t1 = t), on=.(id, t >= t0), v7 := sum(v), by=.EACHI][]
DT = data.table(id = rep(1:2, each = 3), t = c(1L, 5L, 12L, 3L, 4L, 15L), v = 1:6)
DT[.(id = id, t0 = t - 7L, t1 = t), on=.(id, t >= t0), v7 := sum(v), by=.EACHI][]
DT = data.table(id = rep(1:2, each = 3), t = c(1L, 5L, 12L, 3L, 4L, 15L), v = 1:6)
DT[.(id = id, t0 = t - 7L, t1 = t), on=.(id, t >= t0, t < t1), v7 := sum(v), by=.EACHI][]
DT = data.table(id = rep(1:2, each = 3), t = c(1L, 5L, 12L, 3L, 4L, 15L), v = 1:6)
DT[.(id = id, t0 = t - 7L, t1 = t), on=.(id, t >= t0, t < t1), v7 := sum(v), by=.EACHI][]
DT[id ==2 & between(t, -2,4)]
DT
DT[id ==2 & between(t, -2,4), sum(v)]
DT = data.table(id = rep(1:2, each = 3), t = c(1L, 5L, 12L, 3L, 4L, 15L), v = 1:6)
DT[.(id = id, t0 = t - 7L, t1 = t), on=.(id, t >= t0, t < t1), v7 := sum(v), by=.EACHI][]
DT = data.table(
id = c(1L, 1L, 1L, 2L, 2L, 2L, 3L, 3L, 3L, 4L, 4L, 4L, 5L, 5L, 5L, 6L, 6L, 6L),
t  = c(18L, 19L, 13L, 18L, 14L, 16L, 16L, 19L, 4L, 4L, 4L, 18L, 3L, 4L, 13L, 12L, 16L, 4L)
)
DT
DT[.(id = id, t0 = t - 7L, t1 = t), on=.(id, t >= t0, t < t1),
v7 := sum(v)
, by=.EACHI][]
DT[.(t0 = tg - 3, t1 = tg), on=.(t > t0, t < t1),
uniqueN(id, na.rm = TRUE)
, by=.EACHI]
tg = DT[, seq.int(min(t), max(t))]
DT[.(t0 = tg - 3, t1 = tg), on=.(t > t0, t < t1),
uniqueN(id, na.rm = TRUE)
, by=.EACHI]
DT = data.table(
id = c(1L, 1L, 1L, 2L, 2L, 2L, 3L, 3L, 3L, 4L, 4L, 4L, 5L, 5L, 5L, 6L, 6L, 6L),
t  = c(18L, 19L, 13L, 18L, 14L, 16L, 16L, 19L, 4L, 4L, 4L, 18L, 3L, 4L, 13L, 12L, 16L, 4L)
)
DT
# identify range of dates of interest
tg = DT[, seq.int(min(t), max(t))]
DT[.(t0 = tg - 3, t1 = tg), on=.(t > t0, t < t1),
uniqueN(id, na.rm = TRUE)
, by=.EACHI]
DT[.(t0 = tg - 3, t1 = tg), on=.(t > t0, t < t1),
uniqueN(id, na.rm = TRUE)
, by=.EACHI][, setnames(.SD, c("t0", "t", "n"))]
[, setnames(.SD, c("t0", "t", "n"))]
DT[.(t0 = tg - 3, t1 = tg), on=.(t > t0, t < t1),
uniqueN(id, na.rm = TRUE)
, by=.EACHI][, setnames(.SD, c("t0", "t", "n"))]
DT = data.table(
id = c(5L, 6L, 2L, 3L, 3L, 2L, 4L),
t = c(4L, 16L, 16L, 16L, 4L, 14L, 4L)
)
DT
# identify range of dates of interest
tg = DT[, seq.int(min(t), max(t))]
DT[.(t0 = tg - 3, t1 = tg), on=.(t > t0, t < t1),
uniqueN(id, na.rm = TRUE)
, by=.EACHI]
DT
id = c(5L, 6L, 2L, 3L, 3L, 2L, 4L), t = c(4L,
16L, 16L, 16L, 4L, 14L, 4L)
DT = data.table(
id = c(5L, 6L, 2L, 3L, 3L, 2L, 4L),
t = c(4L, 16L, 16L, 16L, 4L, 14L, 4L)
)
DT
# identify range of dates of interest
tg = DT[, seq.int(min(t), max(t))]
DT[.(t0 = tg - 3, t1 = tg), on=.(t > t0, t < t1),
uniqueN(id, na.rm = TRUE)
, by=.EACHI]
DT = data.table(
id = c(3L, 2L, 4L, 6L, 1L, 6L, 6L),
t = c(13L, 11L, 1L, 13L, 16L, 9L, 1L)
)
DT
# identify range of dates of interest
tg = DT[, seq.int(min(t), max(t))]
DT[.(t0 = tg - 3, t1 = tg), on=.(t > t0, t < t1),
uniqueN(id, na.rm = TRUE)
, by=.EACHI]
warnings()
DT = data.table(
x = letters[c(1, 2, 3, 4, 5)],
y = c(1, 2, 3, 4, 5),
z = c(1, 2, 3, 4, 5) > 3
)
DT
DT[, u := 5:1][]
# creating multiple
DT[, `:=`(v = 2, w = 3L)][]
# creating with dynamic names
nms = c("a", "b", "c")
DT[, (nms) := .(1, 2, 3)][]
DT = data.table(
ID = c("D", "F", "F", "B", "C", "F", "A"),
t = c(1L, 1L, 9L, 11L, 13L, 13L, 16L)
)
setkey(DT, ID, t)
DT[.("F", 10)]
DT[.("F", 13)]
DT[.("F", 1:3), on=.(ID, t)]
DT[.("F", 1:3), on=.(ID, t), roll = Inf]
DT[.("F", 1:3), on=.(ID, t), roll = -Inf]
DT[.("F", 1:3), on=.(ID, t), roll = -Inf]
DT[.("F", 1:3), on=.(ID, t), roll = -Inf]
DT
`browseVignettes(package="data.table")
browseVignettes(package="data.table")
devtools::install_github("rstudio/rmarkdown")
library(data.table)
a = data.table(id = c(1L, 1L, 2L, 3L, NA_integer_), t = c(1L, 2L, 1L, 2L, NA_integer_), x = 11:15)
a
b = data.table(id = 1:2, y = -(1:2))
b
a[b, on=.(id)]
a[b, on=.(x = y)]
a = data.table(id = c(1L, 1L, 2L, 3L, NA_integer_), t = c(1L, 2L, 1L, 2L, NA_integer_), x = 11:15)
a
b = data.table(id = 1:2, y = c(11L, 15L))
b
a = data.table(id = c(1L, 1L, 2L, 3L, NA_integer_), t = c(1L, 2L, 1L, 2L, NA_integer_), x = 11:15)
a
b = data.table(id = 1:2, y = c(11L, 15L))
b
a[b, on=.(id)]
a[b, on=.(x = y)]
a[b, on=.(id, x = y)]
a[b, on=.(id)]
a[b, on=.(id), lapply(.SD, sum), by=.EACHI, .SDcols = c("x", "y")]
a[b, on=.(id), sum(), by=.EACHI]
a[b, on=.(id), sumy, by=.EACHI]
a[b, on=.(id), sum(y), by=.EACHI]
a[b, on=.(id), sum(x), by=.EACHI]
a[b, on=.(id), .(sum(x), sum(y)), by=.EACHI]
a[b, on=.(id)]
y
a[b, on=.(id), .(sum(x), sum(i.y)), by=.EACHI]
a[b, on=.(id), .(sum(x.x), sum(i.y)), by=.EACHI]
a[b, on=.(id), dput(y), by=.EACHI]
sessionInfo()
library(data.table)
a = data.table(id = c(1L, 1L, 2L, 3L, NA_integer_), t = c(1L, 2L, 1L, 2L, NA_integer_), x = 11:15)
a
b = data.table(id = 1:2, y = c(11L, 15L))
b
b[, sumx :=
a[b, on=.(id), .(sum(x), sum(y)), by=.EACHI]
]
a[b, on=.(id), .(sum(x), sum(y)), by=.EACHI]
b[, sumx :=
a[b, on=.(id), sum(x), by=.EACHI]$V1
]
b
b[, sumx :=
a[b, on=.(id), sum(x), by=.EACHI]$V1
]
b
a
b[, sumx :=
a[.SD, on=.(id), sum(x), by=.EACHI]$V1
]
b
a[b, on=.(id), y := i.y ]
a
b[a, on=.(id)]
b[a, on=.(id), x, by=.EACHI]
b[a, on=.(id), x := i.x, by=.EACHI]
b
a
b
DT = data.table(id = c(1L, 1L, 2L), year = c(1999L, 2000L, 1999L), v = c(5, 7, 9))
DT
a
b
a[CJ(id = id, t = t, unique=TRUE), on=.(id, t)]
a
a
a = data.table(id = c(1L, 1L, 2L, 3L, NA_integer_), t = c(1L, 2L, 1L, 2L, NA_integer_), x = 11:15)
a
b = data.table(id = 1:2, y = c(11L, 15L))
b
a
b
a
a
a[.(1L), on=.(id)]
# or, as a function
ra <- function(my_id) a[.(my_id), on=.(id)]
ra(1L)
ra(2L)
setDT(list(1L))
a[setDT(list(1L)), on=.(id)]
a[unname(setDT(list(1L))), on=.(id)]
a[data.table(1L), on=.(id)]
a
a
b
a[.(8:12), on=.(x)]
a[.(8:12), on=.(x), roll="nearest"]
a[.(c(10.5, 11.5, 12.5)), on=.(x), roll="nearest"]
a[.(c(10.5, 11.5, 12.5)), on=.(x), roll="nearest", verbose=TRUE]
a[.(c(5L, 10L, 15L, 20L)), on=.(x), roll="nearest"]
a[.(c(5L, 10L, 15L, 20L)), on=.(x)]
a[.(c(5L, 10L, 15L, 20L)), on=.(x)]
a[.(c(5L, 10L, 15L, 20L)), on=.(x), roll=-3]
a[.(c(5L, 10L, 15L, 20L)), on=.(x), roll=-3]
a[.(c(5L, 10L, 15L, 20L)), on=.(x), roll="nearest"]
a[.(c(5L, 10L, 15L, 20L)), on=.(x), roll="nearest"]
a[.(c(5L, 10L, 15L, 20L)), on=.(x), .(i.x, x.x), roll="nearest"]
a[.(c(5L, 10L, 15L, 20L)), on=.(x), .(i.x, x.x), roll="nearest"]
a[.(x = c(5L, 10L, 15L, 20L)), on=.(x), .(i.x, x.x), roll="nearest"]
myxDT = list(myx = c(5L, 10L, 15L, 20L))
# no exact matches
a[myxDT, on=.(x = myx), .(i.myx, x.x)]
a[myxDT, on=.(x = myx), .(i.myx, x.x), roll="nearest"]
a[myxDT, on=.(x = myx), .(i.myx, x.x), roll="nearest"]
a[myxDT, on=.(x = myx), .(i.myx, x.x)]
a[myxDT, on=.(x = myx), .(i.myx, x.x)]
a[myxDT, on=.(x = myx), roll="nearest", .(i.myx,
x.x)]
# exact match (equi-join)
a[myxDT, on=.(x = myx), .(i.myx, x.x)]
# nearest match
a[myxDT, on=.(x = myx), roll="nearest", .(i.myx, x.x)]
# upward match within 3
a[myxDT, on=.(x = myx), roll=-3, .(i.myx, x.x)]
mDT = .(id = 1:3, x_dn = 11:13, x_up = 18:20)
a[mDT, on=.(id, x >= x_dn, x <= x_up)]
mDT = data.table(id = 1:3, x_dn = 11:13, x_up = 18:20)
a[mDT, on=.(id, x >= x_dn, x <= x_up)]
mDT = data.table(id = 1:3, x_dn = 11:13, x_up = 18:20)
a[mDT, on=.(id, x >= x_dn, x <= x_up)]
a[mDT, on=.(id, x >= x_dn, x <= x_up), .(t, i.x_dn, i.x_up, x.x)]
a[mDT, on=.(id, x >= x_dn, x <= x_up), .(id, i.x_dn, i.x_up, x.x)]
a
a[mDT, on=.(id, x >= x_dn, x <= x_up), .(id, i.x_dn, i.x_up, x.x)]
a
mDT = data.table(id = 1:3, x_dn = 10L, x_up = c(13L, 12L, 11L))
a[mDT, on=.(id, x >= x_dn, x <= x_up), .(id, i.x_dn, i.x_up, x.x)]
mDT = data.table(id = 1:3, x_dn = 10L, x_up = c(13L, 12L, 11L))
a[mDT, on=.(id, x >= x_dn, x <= x_up), .(id, i.x_dn, i.x_up, x.x)]
a
a
mDT = data.table(id = 1:3, x_dn = 10L, x_up = c(11L, 15L, 12L))
a[mDT, on=.(id, x >= x_dn, x <= x_up), .(id, i.x_dn, i.x_up, x.x)]
mDT = data.table(id = 1:3, x_dn = 10L, x_up = c(11L, 15L, 12L))
a[mDT, on=.(id, x >= x_dn, x <= x_up), .(id, i.x_dn, i.x_up, x.x)]
mDT = data.table(id = 1:3, x_dn = 10L, x_up = 13L)
a[mDT, on=.(id, x >= x_dn, x <= x_up), .(id, i.x_dn, i.x_up, x.x)]
charDT = data.table(ch = c("A", "A", "B"), V = c(1, 4, 7))
charDT["A", on=.(ch)]
# instead of
charDT[.("A"), on=.(ch)]
charDT = data.table(ch = c("A", "A", "B"), V = c(1, 4, 7))
charDT["A", on=.(ch)]
# instead of
charDT[.("A"), on=.(ch)]
.
DT = data.table(A=1:2, B=3:4)
setkey(DT)
DT[.(B = 3, A = 1)]
DT[.(B = 3, A = 1), nomatch=0]
DT = data.table(ch = c("A", "A", "B"), u = 1:3, v = c(1, 4, 7))
DT["A", on=.(ch)]
# instead of
DT[.("A"), on=.(ch)]
DT = data.table(id = c("A", "A", "B"), u = c(0, 1, 2), v = c(1, 4, 7))
DT["A", on=.(id)]
# instead of
DT[.("A"), on=.(id)]
setkey(DT, id)
DT["A"]
DT = data.table(id = c("A", "A", "B"), u = c(0, 1, 2), v = c(1, 4, 7))
DT["A", on=.(id)]
# instead of
DT[.("A"), on=.(id)]
setkey(DT, id)
DT["A"]
setkey(DT, id)
DT["A"]
setkey(DT, u, v)
DT[.(v = 7, u = 2)]
setkey(DT, u, v)
DT[.(v = 7, u = 2)]
setindex(DT, id, u)
setindex(DT, id, v)
str(DT)
setindex(DT, id, u)
setindex(DT, id, v)
str(DT)
key(DT)
indices(DT)
str(DT)
indices(DT)
setindex(DT, id, u)
setindex(DT, id, v)
key(DT)
indices(DT)
str(DT)
setindex(DT, id, u)
setindex(DT, id, v)
key(DT)
indices(DT)
str(DT)
str(DT)
indices(DT)
indices(DT)
args(indices)
key(DT)
indices(DT, vectors=TRUE)
str(DT)
setindex(DT, id, u)
setindex(DT, id, v)
key(DT)
indices(DT, vectors=TRUE)
str(DT)
a
b
a
a[!b, on=.(id)]
a[-b, on=.(id)]
nms = c("a", "b")
c(nms[1] = 1, nms[2] = 2) # error
setNames(c(1, 2), nms)
DT = data.table(dt = "2017-01-01 01:11")
DT[, IDateTime(dt)]
as.ITime("01:11")
DT = data.table(dt = "2017-01-01 01:11:00")
DT[, IDateTime(dt)]
DT[, IDateTime(as.factor(dt))]
DT[, IDateTime(as.factor(dt))]
DT = data.table(dt = "2017-01-01 01:11")
DT[, IDateTime(as.factor(dt))]
DT = data.table(dt = "2017-01-01 01:11")
DT[, c("d", "t") := IDateTime(as.factor(dt))]
DT = data.table(dt = "2017-01-01 01:11")
DT[, c("d", "t") := IDateTime(as.factor(dt))][]
DT = data.table(x = c("A001ABC", "B001DEF"))
DT[, `:=`(x_id = substring(x, 1, 1), x_num = substring(x, 2, 4), x_val = substring(x, 5, 7))]
DT = data.table(x = c("A001ABC", "B001DEF"))
DT[, `:=`(x_id = substring(x, 1, 1), x_num = substring(x, 2, 4), x_val = substring(x, 5, 7))]
DT
?stringi
DT = data.table(v = c(, "Yes", "No", "Yep", "Nope", "argle", "bargle", "garble", "blargh"))
# desired mapping
v_translateDT = rbind(
data.table(v_old = c("Yes", "Yep"), v_new = TRUE),
data.table(v_old = c("No", "Nope"), v_new = TRUE)
)
# update join
DT[v_translateDT, on=.(v = v_old), vt := i.v_new ]
DT = data.table(v = c(, "Yes", "No", "Yep", "Nope", "argle", "bargle", "garble", "blargh"))
# desired mapping
v_translateDT = rbind(
data.table(v_old = c("Yes", "Yep"), v_new = TRUE),
data.table(v_old = c("No", "Nope"), v_new = TRUE)
)
# update join
DT[v_translateDT, on=.(v = v_old), vt := i.v_new ]
DT = data.table(v = c("Yes", "No", "Yep", "Nope", "argle", "bargle", "garble", "blargh"))
# desired mapping
v_translateDT = rbind(
data.table(v_old = c("Yes", "Yep"), v_new = TRUE),
data.table(v_old = c("No", "Nope"), v_new = TRUE)
)
# update join
DT[v_translateDT, on=.(v = v_old), vt := i.v_new ]
DT
# example data
DT = data.table(v = c("Yes", "argle", "bargle", "No", "Yep", "garble", "Nope", "blargh"))
# desired mapping
v_translateDT = rbind(
data.table(v_old = c("Yes", "Yep"), v_new = TRUE),
data.table(v_old = c("No", "Nope"), v_new = TRUE)
)
# update join
DT[v_translateDT, on=.(v = v_old), vt := i.v_new ]
DT
