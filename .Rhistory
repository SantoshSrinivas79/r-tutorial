table(above10 = x > 10)
set.seed(1)
n = 100
x = rpois(n, lambda = 10)
y = x^2 + rpois(n, lambda = 10)
table(above10 = x > 10)
set.seed(1)
n = 100
x = rpois(n, lambda = 10)
y = x^2 + rpois(n, lambda = 10)
table(hix = x > 10, hiy = y > x + 100)
table(hix = x > 10, hiy = y > x + 50)
xtab_set <- function(A, B){
both    <-  union(A, B)
inA     <-  both %in% A
inB     <-  both %in% B
return(table(inA, inB))
}
set.seed(1)
A <- sample(letters[1:20], 10, replace = TRUE)
B <- sample(letters[1:20], 10, replace = TRUE)
xtab_set(A, B)
xtab_set <- function(A, B){
both    <-  c(A, B)
inA     <-  both %in% A
inB     <-  both %in% B
return(table(inA, inB))
}
set.seed(1)
A <- sample(letters[1:20], 10, replace = TRUE)
B <- sample(letters[1:20], 10, replace = TRUE)
xtab_set(A, B)
DF
DF = data.frame(x = 1:3, y = 4:6)
DF$x + DF$y
within(DF,{z = x + y})
transform(DF, z = x + y)
x = c(1,1,1, 0,0)
transform(rle(x), z = 3)
x = c(1, 1, 1, 0, 0, 1, 1)
rle(x)
x = c(1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1)
rle(x)
r = rle(x)
new_r = with(r, {
lengths = tail(lengths, 3)
values  = tail(values, 3)
})
inverse.rle(new_r)
new_r
r = rle(x)
new_r = within(r, {
lengths = tail(lengths, 3)
values  = tail(values, 3)
})
inverse.rle(new_r)
r = rle(x)
new_r = with(r, {
new_lengths = tail(lengths, 3)
new_values  = tail(values, 3)
list(lengths = new_lengths, values = new_values)
})
inverse.rle(new_r)
x
new_r
?with
library(fortunes)
?fortune
fortunes("attach")
fortune("attach")
fortune("Ripley")
?replications
?rep
?vector
?logical
?numericD
?numeric
character(3)
max
min
ceiling
floor
?letters
?weekdays
weekdays
?NumericConstants
?Reserved
pi
pi0 = pi
pi = 2
pi
TRUE = 2
rm(pi)
pi
?plotmath
library(help="datasets")
library(help="R-intro")
?library
T = 2
devtools::install_github("rstudio/bookdown")
install.pacakges('devtools')
install.packages('devtools')
devtools::install_github("rstudio/bookdown")
install.packages('Rcpp')
install.packages("Rcpp")
devtools::install_github("rstudio/bookdown")
getwd()
getwd()
remove.packages("data.table")         # First remove the current version
install.packages("data.table")
remove.packages("data.table")
remove.packages("data.table")                         # First remove the current version
install.packages("data.table", type = "source",
repos = "http://Rdatatable.github.io/data.table") # Then install devel version
library(data.table)
remove.packages("data.table")         # First remove the current version
install.packages("data.table")
install.packages("data.table", type = "source",
repos = "http://Rdatatable.github.io/data.table") # Then install devel version
remove.packages("data.table")                         # First remove the current version
install.packages("data.table", type = "source",
repos = "http://Rdatatable.github.io/data.table") # Then install devel version
library(data.table)
---
x = 1
y = x
typeof(y)
str(y)
x = c(a=1,b=2)
names(x)
c(1, X = c(a = 2, b = 3, 4))
c(A = 1, A = 1)
list(1)[NA_integer_]
m = matrix(c(1,2,3,4), nrow = 2)
im = matrix(c(1,1,2,2), 2, 2, byrow=TRUE)
m[c(2,3)]
m[im]
im
v = 1:3
v[c(1,1)] = 2
v[c(1,1)] = c(2,3)
v
v[c(1,1)] = c(4,5)
v
m = matrix(c(1,2,3,4,5,6), nrow = 2)
m[1, c(1,2), drop = FALSE]
m[, 2, drop = FALSE]
m[, 2]
m[3]
m[c(2,3)]
im = matrix(c(1,1,2,2), 2, 2, byrow=TRUE)
m[im]
.1 + .05 - .15 == 0
c(-2,2) ^ c(1,2,3,4)
is_gt = c(1,5,2) > c(1,2,3); sum(is_gt)
"4.11" == 4.11
2==NA
2!=NA
(3:4)[-(1:2)]
(1:2)[NA_real_]
(1:2)[NA]
c(1, 3, NA) %in% c(1, 2, NA)
c(1, 3, NA) %in% c(1, 2)
"A" %in% c("A", "A", "B")
DT[, a := 1L][]
DT[, a := 2L][]
getwd()
install.packages('digest')
devtools::install_github('rstudio/bookdown')
# example data
L = list(X = 1, Y = 2, Z = 3)
L["Z"] # slicing
# $Z
# [1] 3
L[["Z"]] # extracting
m = matrix(c(1,2,3,4,5,6), nrow = 2, dimnames = list(c("a", "b"), c("x", "y", "z")))
m[3]
m[c(2,3)]
im = matrix(c(1,1,2,2), 2, 2, byrow=TRUE)
m[im]
m["a", "y"]
m[1, 2]
m
?namespace
?Namespace
?`::~`
?`::`
utils:::head.default
?.subset
DT = data.table(
x = letters[c(1, 2, 3, 4, 5)],
y = c(1, 2, 3, 4, 5),
z = c(1, 2, 3, 4, 5) > 3
)
library(data.table)
DT = data.table(
x = letters[c(1, 2, 3, 4, 5)],
y = c(1, 2, 3, 4, 5),
z = c(1, 2, 3, 4, 5) > 3
)
DT[x > "b", sum(y), by=z]
DT[x > "b", sum(y), by=z, verbose=TRUE]
DT[x > "b", sum(y), by=z]
DT[x > "b", sum(y), by=z, verbose=TRUE]
warnings()
DT = data.table(
x = letters[c(1, 2, 3, 4, 5)],
y = c(1, 2, 3, 4, 5),
z = c(1, 2, 3, 4, 5) > 3
)
warnings()
warnings()
args(warnings)
?warnings
DT[, `:=`(W1 = x, W2 = W1^2)]
DT
warnings()
warnings()
warnings()
warnings()
DT[, `:=`(W1 = x, W2 = W1^2)]
DT[, `:=`(W1 = x, W2 = W1^2)]
DT[, `:=`(W1 = W1 <- x + y, W2 = W1^2)]
DT
DT[, b := "Ants"][y > 1, b := "Gerbils", verbose = TRUE]
DT
?.SDcols
a = data.table(id = c(1L, 1L, 2L, 3L, NA_integer_), x = 11:15)
.Last.value
x <- 2
.Last.value
?.
?data.table:::.
x
x
?bookdown::build_chapter
b[a, on="id", .N, by=.EACHI]
a = data.table(id = c(1L, 1L, 2L, 3L, NA_integer_), x = 11:15)
a
b = data.table(id = 1:2, y = -(1:2))
b
b[a, on="id", .N, by=.EACHI]
a[b, on="id", .N, by=.EACHI]
a
b
b[!a, on=.(id)]
a[!b, on=.(id)]
a[!b, on=.(id)]
fsetdiff(a, b)
fsetdiff(a, b)
x
x
a[!b, on=.(id)]
b
b
str(b)
str(b)
a[b, on=.(id), y := i.y ]
warnings()
a[b, on=.(id), y := i.y ]
a[b, on=.(id)]
a
b[]
b[]
b[a, on=.(id)]
b[a, on=.(id), x := i.x ][]
b[a, on=.(id), x := i.x ][]
b[a, on=.(id), x := i.x, verbose = TRUE TRUE][]
b[a, on=.(id), x := i.x, verbose = TRUE][]
b[a, on=.(id), x := i.x, verbose = TRUE, by=.EACHI][]
b[a, on=.(id), x := if (.N==1L) i.x else stop(do.call(paste, c("Bad:", .BY))), verbose = TRUE][]
b[a, on=.(id), x := if (.N==1L) i.x else stop(do.call(paste, c(.("Bad:"), .BY))), verbose = TRUE][]
b[a, on=.(id), x := if (.N==1L) i.x else stop(do.call(paste, c("Bad:", .BY))), by=.EACHI, verbose = TRUE][]
b[a, on=.(id), x := if (.N==1L) i.x else stop(do.call(paste, c("Bad:", .BY))), by=.EACHI, verbose = TRUE][]
b[a, on=.(id), .N, by=.EACHI, verbose = TRUE][]
a[b, on=.(id), .N, by=.EACHI][, range(.N)]
a[b, on=.(id), .N, by=.EACHI]
a[b, on=.(id), .N, by=.EACHI][, range(N)]
1
library(data.table)
a <- data.table(id = c(1L, 1L, 2L, 3L, NA_integer_), x = 11:15)
b <- data.table(id = 1:2, y = -(1:2))
b[a, on=.(id), x := i.x, verbose = TRUE][]
# Calculated ad hoc index in 0 secs
# Starting bmerge ...done in 0 secs
# Detected that j uses these columns: x,i.x
# Assigning to 3 row subset of 2 rows
?.Last.value
1
personDT = data.table(id = 1:2, name = LETTERS[1:2])
placeDT = data.table(id = 1:2, name = state.abb[1:2])
personDT
placeDT
perDT = data.table(id = 1:2, name = LETTERS[1:2])
locDT = data.table(id = 1:2, name = state.abb[1:2])
psnDT = data.table(id = 1:2, name = LETTERS[1:2])
locDT = data.table(id = 1:2, name = state.abb[1:2])
psnDT[locDT, on=.()]
psnDT[, .cjid := NA ]
locDT[, .cjid := NA ]
visitDT = psnDT[locDT, on=.(.cjid)]
psnDT[locDT, on=.(.cjid)]
visitDT = psnDT[locDT, on=.(.cjid), !"cjid"]
visitDT
visitDT = psnDT[locDT, on=.(.cjid), !".cjid"]
visitDT
visitDT = psnDT[locDT, on=.(.cjid)][, !".cjid"]
visitDT
psnDT[, .cjid := NA ]
locDT[, .cjid := NA ]
visitDT = psnDT[locDT, on=.(.cjid)][, .cjid := NULL ]
visitDT
psnDT[, .cjid := NULL ] # cleanup
locDT[, .cjid := NULL ]
visitDT
psnDT[, .cjid := NA ]
locDT[, .cjid := NA ]
visitDT = psnDT[locDT, on=.(.cjid)][, .cjid := NULL ][]
psnDT[, .cjid := NULL ] # cleanup
locDT[, .cjid := NULL ]
psnDT[, .cjid := NA ]
locDT[, .cjid := NA ]
visitDT = psnDT[locDT, on=.(.cjid)][, .cjid := NULL ][]
psnDT[, .cjid := NULL ] # cleanup
locDT[, .cjid := NULL ]
visitDT = psnDT[locDT, on=.(.cjid)][, .cjid := NULL ][]
psnDT[, .cjid := NA ]
locDT[, .cjid := NA ]
visitDT = psnDT[locDT, on=.(.cjid)][, .cjid := NULL ][]
visitDT
psnDT[, .cjid := NA ]
locDT[, .cjid := NA ]
visitDT = psnDT[locDT, on=.(.cjid),
.(psn_id = x.id, loc_id = i.id, psn_name = x.id, loc_name = i.id)]
visitDT
x = c(1,1,1,2,2)
with(rle(x), lengths)
diag(4)
diag(3)[1:2,]
diag(diag(3)[1:2,])
replace(numeric(5), 3, 1)
?head.data.frame
head
methods("head", class(1))
methods("head", class(data.table(1)))
library(data.table)
library(data.table)
methods("head", class(data.table(1)))
?rle
f = function(x) x
c(LETTERS, letters)
# example data
x = c(TRUE, FALSE, TRUE)
x
# [1]  TRUE FALSE  TRUE
length(x)
# [1] 3
class(x)
# [1] "logical"
help.start()
T
array()
args(array)
args(matrix)
array
upper.tri
devtools::install_github("rstudio/rmarkdown")
a = data.table(id = c(1L, 1L, 2L, 3L, NA_integer_), x = 11:15)
library(data.table)
a = data.table(id = c(1L, 1L, 2L, 3L, NA_integer_), x = 11:15)
a
b = data.table(id = 1:2, y = -(1:2))
b
a
b
a = data.table(id = c(1L, 1L, 2L, 3L, NA_integer_), t = c(1L, 2L, 1L, 2L, NA_integer_) x = 11:15)
a = data.table(id = c(1L, 1L, 2L, 3L, NA_integer_), t = c(1L, 2L, 1L, 2L, NA_integer_), x = 11:15)
a
DT = data.table(id = rep(1:2, 3), t = c(1L, 5L, 12L, 3L, 4L, 15L))
DT = data.table(id = rep(1:2, 3), t = c(1L, 5L, 12L, 3L, 4L, 15L))
DT[.(id = id, t0 = t - 7, t1 = t), on=.(id, t >= t0, t < t1), .N, by=.EACHI]
warnings()
DT[.(id = id, t0 = t - 7, t1 = t), on=.(id, t >= t0, t < t1), .N, by=.EACHI]
DT = data.table(id = rep(1:2, 3), t = c(1L, 5L, 12L, 3L, 4L, 15L))
DT[.(id = id, t0 = t - 7, t1 = t), on=.(id, t >= t0, t < t1), .N, by=.EACHI]
DT = data.table(id = rep(1:2, each = 3), t = c(1L, 5L, 12L, 3L, 4L, 15L))
DT[.(id = id, t0 = t - 7, t1 = t), on=.(id, t >= t0, t < t1), .N, by=.EACHI]
warnings()
warnings()
warnings()
warnings()
DT = data.table(id = rep(1:2, each = 3), t = c(1L, 5L, 12L, 3L, 4L, 15L))
DT[.(id = id, t0 = t - 7, t1 = t), on=.(id, t >= t0, t < t1), .N, by=.EACHI]
DT = data.table(id = rep(1:2, each = 3), t = c(1L, 5L, 12L, 3L, 4L, 15L), v = 1:6)
DT[.(id = id, t0 = t - 7L, t1 = t), on=.(id, t >= t0), sum(v), by=.EACHI]
DT[.(id = id, t0 = t - 7L, t1 = t), on=.(id, t >= t0), v7 := sum(v), by=.EACHI]
DT
DT
DT
DT
DT
DT = data.table(id = rep(1:2, each = 3), t = c(1L, 5L, 12L, 3L, 4L, 15L), v = 1:6)
DT[.(id = id, t0 = t - 7L, t1 = t), on=.(id, t >= t0), v7 := sum(v), by=.EACHI][]
DT = data.table(id = rep(1:2, each = 3), t = c(1L, 5L, 12L, 3L, 4L, 15L), v = 1:6)
DT[.(id = id, t0 = t - 7L, t1 = t), on=.(id, t >= t0), v7 := sum(v), by=.EACHI][]
DT = data.table(id = rep(1:2, each = 3), t = c(1L, 5L, 12L, 3L, 4L, 15L), v = 1:6)
DT[.(id = id, t0 = t - 7L, t1 = t), on=.(id, t >= t0), v7 := sum(v), by=.EACHI][]
DT = data.table(id = rep(1:2, each = 3), t = c(1L, 5L, 12L, 3L, 4L, 15L), v = 1:6)
DT[.(id = id, t0 = t - 7L, t1 = t), on=.(id, t >= t0), v7 := sum(v), by=.EACHI][]
DT = data.table(id = rep(1:2, each = 3), t = c(1L, 5L, 12L, 3L, 4L, 15L), v = 1:6)
DT[.(id = id, t0 = t - 7L, t1 = t), on=.(id, t >= t0, t < t1), v7 := sum(v), by=.EACHI][]
DT = data.table(id = rep(1:2, each = 3), t = c(1L, 5L, 12L, 3L, 4L, 15L), v = 1:6)
DT[.(id = id, t0 = t - 7L, t1 = t), on=.(id, t >= t0, t < t1), v7 := sum(v), by=.EACHI][]
DT[id ==2 & between(t, -2,4)]
DT
DT[id ==2 & between(t, -2,4), sum(v)]
DT = data.table(id = rep(1:2, each = 3), t = c(1L, 5L, 12L, 3L, 4L, 15L), v = 1:6)
DT[.(id = id, t0 = t - 7L, t1 = t), on=.(id, t >= t0, t < t1), v7 := sum(v), by=.EACHI][]
DT = data.table(
id = c(1L, 1L, 1L, 2L, 2L, 2L, 3L, 3L, 3L, 4L, 4L, 4L, 5L, 5L, 5L, 6L, 6L, 6L),
t  = c(18L, 19L, 13L, 18L, 14L, 16L, 16L, 19L, 4L, 4L, 4L, 18L, 3L, 4L, 13L, 12L, 16L, 4L)
)
DT
DT[.(id = id, t0 = t - 7L, t1 = t), on=.(id, t >= t0, t < t1),
v7 := sum(v)
, by=.EACHI][]
DT[.(t0 = tg - 3, t1 = tg), on=.(t > t0, t < t1),
uniqueN(id, na.rm = TRUE)
, by=.EACHI]
tg = DT[, seq.int(min(t), max(t))]
DT[.(t0 = tg - 3, t1 = tg), on=.(t > t0, t < t1),
uniqueN(id, na.rm = TRUE)
, by=.EACHI]
DT = data.table(
id = c(1L, 1L, 1L, 2L, 2L, 2L, 3L, 3L, 3L, 4L, 4L, 4L, 5L, 5L, 5L, 6L, 6L, 6L),
t  = c(18L, 19L, 13L, 18L, 14L, 16L, 16L, 19L, 4L, 4L, 4L, 18L, 3L, 4L, 13L, 12L, 16L, 4L)
)
DT
# identify range of dates of interest
tg = DT[, seq.int(min(t), max(t))]
DT[.(t0 = tg - 3, t1 = tg), on=.(t > t0, t < t1),
uniqueN(id, na.rm = TRUE)
, by=.EACHI]
DT[.(t0 = tg - 3, t1 = tg), on=.(t > t0, t < t1),
uniqueN(id, na.rm = TRUE)
, by=.EACHI][, setnames(.SD, c("t0", "t", "n"))]
[, setnames(.SD, c("t0", "t", "n"))]
DT[.(t0 = tg - 3, t1 = tg), on=.(t > t0, t < t1),
uniqueN(id, na.rm = TRUE)
, by=.EACHI][, setnames(.SD, c("t0", "t", "n"))]
DT = data.table(
id = c(5L, 6L, 2L, 3L, 3L, 2L, 4L),
t = c(4L, 16L, 16L, 16L, 4L, 14L, 4L)
)
DT
# identify range of dates of interest
tg = DT[, seq.int(min(t), max(t))]
DT[.(t0 = tg - 3, t1 = tg), on=.(t > t0, t < t1),
uniqueN(id, na.rm = TRUE)
, by=.EACHI]
DT
id = c(5L, 6L, 2L, 3L, 3L, 2L, 4L), t = c(4L,
16L, 16L, 16L, 4L, 14L, 4L)
DT = data.table(
id = c(5L, 6L, 2L, 3L, 3L, 2L, 4L),
t = c(4L, 16L, 16L, 16L, 4L, 14L, 4L)
)
DT
# identify range of dates of interest
tg = DT[, seq.int(min(t), max(t))]
DT[.(t0 = tg - 3, t1 = tg), on=.(t > t0, t < t1),
uniqueN(id, na.rm = TRUE)
, by=.EACHI]
DT = data.table(
id = c(3L, 2L, 4L, 6L, 1L, 6L, 6L),
t = c(13L, 11L, 1L, 13L, 16L, 9L, 1L)
)
DT
# identify range of dates of interest
tg = DT[, seq.int(min(t), max(t))]
DT[.(t0 = tg - 3, t1 = tg), on=.(t > t0, t < t1),
uniqueN(id, na.rm = TRUE)
, by=.EACHI]
warnings()
DT = data.table(
x = letters[c(1, 2, 3, 4, 5)],
y = c(1, 2, 3, 4, 5),
z = c(1, 2, 3, 4, 5) > 3
)
DT
DT[, u := 5:1][]
# creating multiple
DT[, `:=`(v = 2, w = 3L)][]
# creating with dynamic names
nms = c("a", "b", "c")
DT[, (nms) := .(1, 2, 3)][]
DT = data.table(
ID = c("D", "F", "F", "B", "C", "F", "A"),
t = c(1L, 1L, 9L, 11L, 13L, 13L, 16L)
)
setkey(DT, ID, t)
DT[.("F", 10)]
DT[.("F", 13)]
DT[.("F", 1:3), on=.(ID, t)]
DT[.("F", 1:3), on=.(ID, t), roll = Inf]
DT[.("F", 1:3), on=.(ID, t), roll = -Inf]
DT[.("F", 1:3), on=.(ID, t), roll = -Inf]
DT[.("F", 1:3), on=.(ID, t), roll = -Inf]
DT
`browseVignettes(package="data.table")
browseVignettes(package="data.table")
devtools::install_github("rstudio/rmarkdown")
